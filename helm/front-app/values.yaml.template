# Default values for front-app.
replicaCount: 1

image:
  repository: nrt.ocir.io/nrzhjkbijcw5/my_docker_repository/front-app
  tag: 0.1.0-${BUILDRUN_HASH}
  pullPolicy: IfNotPresent

args: []

service:
  type: ClusterIP
  ports:
    http:
      port: 80
      targetPort: 80
      nodePort: null
    https:
      port: 443
      targetPort: 443
      nodePort: null

volumeMounts:
  enabled: false
  mountPath: /usr/share/nginx/html

volumes:
  enabled: false
  persistentVolumeClaim: front-app-pvc

# ConfigMap settings
config:
  NGINX_HOST: "localhost"
  NGINX_PORT: "80"

# Secret settings
secret: {}

isDockerRegistryPrivate: true
imagePullSecrets: "docker-registry"
# dockerConfigJson: ${DOCKER_CONFIG_JSON}

# IngressClassParameters settings
ingressClassParameters:
  name: native-ingress-class-params
  namespace: native-ingress-controller-system
  compartmentId: "ocid1.compartment.oc1..aaaaaaaacprdqdyf4x2rrhpbbhqicpsyytza37dart2o56hodmxnkpcfztna"
  subnetId: "ocid1.subnet.oc1.ap-tokyo-1.aaaaaaaakpe2sabdhoejxr6raf2bsqidjwlzw2hgmtncle3xjuvdn7ohcxya"
  # Static load balancer name (when not using dynamic naming)
  loadBalancerName: "native-ic-lb"
  # Dynamic load balancer name settings
  dynamicLoadBalancerName:
    # Whether to enable dynamic naming
    enabled: false
    # Prefix (e.g., "prod", "dev", "staging", etc.)
    prefix: "dev"
    # Suffix (e.g., "east", "west", etc.)
    suffix: "tokyo"
    # Whether to include release name
    includeReleaseName: true
    # Whether to include namespace
    includeNamespace: false
    # Separator
    separator: "-"
  isPrivate: false
  maxBandwidthMbps: 400
  minBandwidthMbps: 100

# IngressClass settings
ingressClass:
  name: native-ic-ingress-class
  isDefaultClass: "true"
  controller: "oci.oraclecloud.com/native-ingress-controller"
  parameters:
    scope: Namespace
    namespace: native-ingress-controller-system
    apiGroup: ingress.oraclecloud.com
    kind: ingressclassparameters
    name: native-ingress-class-params

# Ingress settings
ingress:
  enabled: true
  name: front-app-ingress
  annotations: {}
  ingressClassName: native-ic-ingress-class
  tls:
    enabled: false
    host: front-app.local
    secretName: front-app-tls
  defaultBackend:
    serviceName: front-app
    servicePort: 80
  rules:
    host: front-app.local
    path: /
    pathType: Prefix
    backend:
      serviceName: front-app
      servicePort: 80

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}

nodeSelector: {}
tolerations: []
affinity: {}