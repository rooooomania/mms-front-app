# Default values for front-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 5

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.25.0"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: "docker-registry"
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {} # fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    http:
      port: 80
      targetPort: 80
      nodePort: null
    https:
      port: 443
      targetPort: 443
      nodePort: null

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  name: front-app-ingress
  annotations: {}
  ingressClassName: native-ic-ingress-class
  tls:
    enabled: false
    host: front-app.local
    secretName: front-app-tls
  defaultBackend:
    serviceName: front-app
    servicePort: 80
  rules:
    host: front-app.local
    path: /
    pathType: Prefix
    backend:
      serviceName: front-app
      servicePort: 80

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
volumes:
  enabled: false
  persistentVolumeClaim: front-app-pvc
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  enabled: false
  mountPath: /usr/share/nginx/html
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# ConfigMap settings
config:
  NGINX_HOST: "localhost"
  NGINX_PORT: "80"

# Secret settings
secret: {}

isDockerRegistryPrivate: false

# IngressClassParameters settings
ingressClassParameters:
  name: native-ingress-class-params
  namespace: native-ingress-controller-system
  compartmentId: "ocid1.compartment.oc1..aaaaaaaacprdqdyf4x2rrhpbbhqicpsyytza37dart2o56hodmxnkpcfztna"
  subnetId: "ocid1.subnet.oc1.ap-tokyo-1.aaaaaaaakpe2sabdhoejxr6raf2bsqidjwlzw2hgmtncle3xjuvdn7ohcxya"
  # Static load balancer name (when not using dynamic naming)
  loadBalancerName: "native-ic-lb"
  # Dynamic load balancer name settings
  dynamicLoadBalancerName:
    # Whether to enable dynamic naming
    enabled: false
    # Prefix (e.g., "prod", "dev", "staging", etc.)
    prefix: "dev"
    # Suffix (e.g., "v1", "east", "west", etc.)
    suffix: "tokyo"
    # Whether to include release name
    includeReleaseName: true
    # Whether to include namespace
    includeNamespace: false
    # Separator
    separator: "-"
  isPrivate: false
  maxBandwidthMbps: 400
  minBandwidthMbps: 100

# IngressClass settings
ingressClass:
  name: native-ic-ingress-class
  isDefaultClass: "true"
  controller: "oci.oraclecloud.com/native-ingress-controller"
  parameters:
    scope: Namespace
    namespace: native-ingress-controller-system
    apiGroup: ingress.oraclecloud.com
    kind: ingressclassparameters
    name: native-ingress-class-params
